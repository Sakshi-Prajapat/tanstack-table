{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/TypeScript+React/tsexample/src/components/TodoTable.tsx\",\n  _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport React from 'react';\nimport { useReactTable } from '@tanstack/react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoTable = () => {\n  _s();\n  // le=\n  const tdata = localStorage.getItem(\"task\");\n  console.log('tdata', tdata);\n  const todoData = useMemo(() => tdata, []);\n  // const [todoData , setTodoData] = useState<ItodoData>()\n  const columns = [{\n    header: \"Name\",\n    accessorKey: \"name\",\n    footer: \"Name\"\n  }, {\n    header: \"Task\",\n    accessorKey: \"task\",\n    footer: \"Task\"\n  }];\n  console.log(tdata);\n  // const table = useReactTable({\n  //    todoData ,\n\n  // })\n\n  const table = useReactTable({\n    columns,\n    ...todoData\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"DAATATATATA\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoTable, \"E+MnhT1wEudLnxPoDpFk+5wpaNg=\", false, function () {\n  return [useReactTable];\n});\n_c = TodoTable;\nexport default TodoTable;\nvar _c;\n$RefreshReg$(_c, \"TodoTable\");","map":{"version":3,"names":["useMemo","React","useReactTable","jsxDEV","_jsxDEV","TodoTable","_s","tdata","localStorage","getItem","console","log","todoData","columns","header","accessorKey","footer","table","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/lenovo/TypeScript+React/tsexample/src/components/TodoTable.tsx"],"sourcesContent":["import { useMemo, useState } from 'react'\nimport React from 'react'\nimport { createTable, useReactTable, getCoreRowModel, flexRender, ColumnDef, } from '@tanstack/react-table'\ntype ItodoData = {\n    name : string,\n    task : string,\n    isDone : boolean\n}\n\nconst TodoTable: React.FC = () => {\n  // le=\n  const tdata = localStorage.getItem(\"task\")\n  console.log('tdata',tdata)\n  \n  const todoData= useMemo(() => tdata , [])\n  // const [todoData , setTodoData] = useState<ItodoData>()\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n      footer: \"Name\"\n    },\n    {\n      header: \"Task\",\n      accessorKey: \"task\",\n      footer: \"Task\"\n    },\n  ]\n  console.log(tdata)\n  // const table = useReactTable({\n  //    todoData ,\n\n  // })\n\n\n  const table = useReactTable({\n    columns,\n    ...todoData \n\n  })\n  return (\n    <div>\nDAATATATATA\n    </div>\n  )\n}\n\nexport default TodoTable;"],"mappings":";;AAAA,SAASA,OAAO,QAAkB,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAsBC,aAAa,QAAiD,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAO3G,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC1CC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACJ,KAAK,CAAC;EAE1B,MAAMK,QAAQ,GAAEZ,OAAO,CAAC,MAAMO,KAAK,EAAG,EAAE,CAAC;EACzC;EACA,MAAMM,OAAO,GAAG,CACd;IACEC,MAAM,EAAE,MAAM;IACdC,WAAW,EAAE,MAAM;IACnBC,MAAM,EAAE;EACV,CAAC,EACD;IACEF,MAAM,EAAE,MAAM;IACdC,WAAW,EAAE,MAAM;IACnBC,MAAM,EAAE;EACV,CAAC,CACF;EACDN,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAClB;EACA;;EAEA;;EAGA,MAAMU,KAAK,GAAGf,aAAa,CAAC;IAC1BW,OAAO;IACP,GAAGD;EAEL,CAAC,CAAC;EACF,oBACER,OAAA;IAAAc,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAAAhB,EAAA,CApCKD,SAAmB;EAAA,QA0BTH,aAAa;AAAA;AAAAqB,EAAA,GA1BvBlB,SAAmB;AAsCzB,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}