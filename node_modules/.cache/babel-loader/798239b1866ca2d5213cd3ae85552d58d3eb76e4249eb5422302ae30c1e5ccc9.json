{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/TypeScript+React/tsexample/src/components/TodoTable.tsx\",\n  _s = $RefreshSig$();\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport React from 'react';\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoTable = () => {\n  _s();\n  let tdata = localStorage.getItem(\"task\");\n  const data = JSON.parse(String(tdata));\n  const columns = [{\n    header: \"Name\",\n    accessorKey: \"name\",\n    footer: \"Name\"\n  }, {\n    header: \"Task\",\n    accessorKey: \"task\",\n    footer: \"Task\"\n  }, {\n    header: \"Done\",\n    accessorKey: \"isDone\"\n  }, {\n    header: \"Edit\"\n  }, {\n    header: \"Delete\"\n  }];\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"30px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        size: \"small\",\n        \"aria-label\": \"a dense table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: table.getHeaderGroups().map(headerGroup => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: headerGroup.headers.map(header => {\n                return /*#__PURE__*/_jsxDEV(TableCell, {}, header.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 25\n                }, this);\n              })\n            }, headerGroup.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: table.getRowModel().rows.map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: row.getVisibleCells().map(cell => {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: flexRender(cell.column.columnDef.cell, cell.getContext())\n                }, cell.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this);\n              })\n            }, row.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoTable, \"+qfJc9U8evODZQ8bBg9G2KVouAc=\", false, function () {\n  return [useReactTable];\n});\n_c = TodoTable;\nexport default TodoTable;\nvar _c;\n$RefreshReg$(_c, \"TodoTable\");","map":{"version":3,"names":["Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","React","useReactTable","getCoreRowModel","flexRender","jsxDEV","_jsxDEV","TodoTable","_s","tdata","localStorage","getItem","data","JSON","parse","String","columns","header","accessorKey","footer","table","style","padding","children","component","sx","minWidth","size","getHeaderGroups","map","headerGroup","headers","id","fileName","_jsxFileName","lineNumber","columnNumber","getRowModel","rows","row","getVisibleCells","cell","column","columnDef","getContext","_c","$RefreshReg$"],"sources":["/home/lenovo/TypeScript+React/tsexample/src/components/TodoTable.tsx"],"sourcesContent":["import { useMemo, useState } from 'react'\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport React from 'react'\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table'\n\nconst TodoTable: React.FC = () => {\n  let tdata = localStorage.getItem(\"task\");\n  const data = JSON.parse(String(tdata));\n\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n      footer: \"Name\"\n    },\n    {\n      header: \"Task\",\n      accessorKey: \"task\",\n      footer: \"Task\"\n    },\n    {\n      header: \"Done\",\n      accessorKey: \"isDone\",\n      \n    },\n    {\n      header: \"Edit\",\n\n    },\n    {\n      header: \"Delete\"\n    }\n  ];\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <div style={{padding:\"30px\"}}>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            {table.getHeaderGroups().map(headerGroup => {\n              return (\n                <TableRow key={headerGroup.id}>\n                  {\n                    headerGroup.headers.map(header => {\n                      return (\n\n                        <TableCell key={header.id}>\n                           {/* {flexRender(header.column.columnDef.header, header.getContext())} */}\n                           \n                           </TableCell>\n\n                      )\n                    })\n                  }\n                </TableRow>\n              )\n            })}\n          </TableHead>\n          <TableBody>\n            {table.getRowModel().rows.map(row => {\n              return (\n                <TableRow key={row.id}>\n                  {row.getVisibleCells().map(cell => {\n                    return (\n                      <TableCell key={cell.id}>\n                        {flexRender(cell.column.columnDef.cell, cell.getContext()\n                      )}\n\n                      </TableCell>\n                      \n                    )\n                  })}\n                </TableRow>\n                \n              )\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\nexport default TodoTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}