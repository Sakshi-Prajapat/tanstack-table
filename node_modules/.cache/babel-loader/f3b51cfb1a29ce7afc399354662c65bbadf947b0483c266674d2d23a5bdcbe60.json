{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/TypeScript+React/tsexample/src/components/TodoTable.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport React from 'react';\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table';\nimport { Button, Checkbox } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n\n  // console.log(\"Local Storage\",tdata)\n  // console.log(\"Converted Data\",data)\n  useEffect(() => {\n    let tdata = localStorage.getItem(\"task\");\n    const data = JSON.parse(String(tdata));\n    setData(data);\n  }, []);\n  const handalclick = index => {\n    console.log(index);\n  };\n  const columns = [{\n    header: \"Name\",\n    accessorKey: \"name\",\n    footer: \"Name\"\n  }, {\n    header: \"Task\",\n    accessorKey: \"task\",\n    footer: \"Task\"\n  }, {\n    header: \"Done\",\n    accessorKey: \"isDone\",\n    cell: ({\n      row: {\n        original: {\n          isDone\n        }\n      }\n    }) => {\n      return (\n        /*#__PURE__*/\n        // console.log(\"ROWSSS\", row.row.original.isDone)\n        _jsxDEV(Checkbox, {\n          checked: isDone,\n          inputProps: {\n            'aria-label': 'controlled'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      );\n    }\n  }, {\n    header: \"Edit\",\n    cell: ({\n      row: {\n        original: {\n          isDone\n        }\n      }\n    }) => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => handalclick(),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    header: \"Delete\",\n    cell: ({\n      row: {\n        index\n      }\n    }) => {\n      console.log('ppppppppppp>');\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => handalclick(index),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"30px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        size: \"small\",\n        \"aria-label\": \"a dense table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: table.getHeaderGroups().map(headerGroup => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: headerGroup.headers.map(header => {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: flexRender(header.column.columnDef.header, header.getContext())\n                }, header.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 25\n                }, this);\n              })\n            }, headerGroup.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: table.getRowModel().rows.map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: row.getVisibleCells().map(cell => {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: flexRender(cell.column.columnDef.cell, cell.getContext())\n                }, cell.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 23\n                }, this);\n              })\n            }, row.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoTable, \"pUWnQmcZOz89QyVq2XiI5FPydBA=\", false, function () {\n  return [useReactTable];\n});\n_c = TodoTable;\nexport default TodoTable;\nvar _c;\n$RefreshReg$(_c, \"TodoTable\");","map":{"version":3,"names":["useEffect","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","React","useReactTable","getCoreRowModel","flexRender","Button","Checkbox","jsxDEV","_jsxDEV","TodoTable","_s","data","setData","tdata","localStorage","getItem","JSON","parse","String","handalclick","index","console","log","columns","header","accessorKey","footer","cell","row","original","isDone","checked","inputProps","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","children","table","style","padding","component","sx","minWidth","size","getHeaderGroups","map","headerGroup","headers","column","columnDef","getContext","id","getRowModel","rows","getVisibleCells","_c","$RefreshReg$"],"sources":["/home/lenovo/TypeScript+React/tsexample/src/components/TodoTable.tsx"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react'\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport React from 'react'\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table'\nimport { Button, ButtonGroup, Checkbox } from '@mui/material';\n\nconst TodoTable: React.FC = () => {\n  const [data, setData] = useState([])\n\n  // console.log(\"Local Storage\",tdata)\n  // console.log(\"Converted Data\",data)\n  useEffect(() => {\n    let tdata = localStorage.getItem(\"task\");\n    const data = JSON.parse(String(tdata));\n    setData(data)\n  }, [])\n\n\n  const handalclick=(index:number)=>{\nconsole.log(index)\n  }\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n      footer: \"Name\"\n    },\n    {\n      header: \"Task\",\n      accessorKey: \"task\",\n      footer: \"Task\"\n    },\n    {\n      header: \"Done\",\n      accessorKey: \"isDone\",\n      cell: ({ row: { original: { isDone } } }: {\n        row: {\n          original: {\n            isDone: boolean;\n          };\n        };\n      }) => {\n        return (\n          // console.log(\"ROWSSS\", row.row.original.isDone)\n\n          <Checkbox checked={isDone} inputProps={{ 'aria-label': 'controlled' }} />\n        )\n      }\n    },\n    {\n      header: \"Edit\",\n      cell: ({ row: { original: { isDone } } }: {\n        row: {\n          original: {\n            isDone: boolean;\n          };\n        };\n      }) => {\n        return (\n          <Button variant='outlined' onClick={()=>handalclick()}>Edit</Button>\n        )\n      }\n    },\n    {\n      header: \"Delete\",\n      cell: ({ row: { index } }: \n       { row: { index :number}\n      }) => {\n        console.log('ppppppppppp>',)\n        return (\n          <Button variant='outlined' onClick={()=>handalclick(index)}>Delete</Button>\n        )\n      }\n    }\n\n  ];\n\n\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <div style={{ padding: \"30px\" }}>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            {table.getHeaderGroups().map(headerGroup => {\n              return (\n                <TableRow key={headerGroup.id}>\n                  {\n                    headerGroup.headers.map(header => {\n                      return (\n\n                        <TableCell key={header.id}>\n                          {flexRender(header.column.columnDef.header, header.getContext())}\n                        </TableCell>\n\n                      )\n                    })\n                  }\n\n                </TableRow>\n\n              )\n            })}\n\n          </TableHead>\n          <TableBody>\n            {table.getRowModel().rows.map(row => {\n              return (\n                <TableRow key={row.id}>\n                  {row.getVisibleCells().map(cell => {\n                    return (\n                      <TableCell key={cell.id}>\n                        {flexRender(cell.column.columnDef.cell, cell.getContext()\n                        )}\n                      </TableCell>\n\n                    )\n                  })}\n\n                </TableRow>\n\n              )\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\nexport default TodoTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}