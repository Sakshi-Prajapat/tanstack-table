{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/TypeScript+React/tsexample/src/components/TodoTable.tsx\",\n  _s = $RefreshSig$();\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport React from 'react';\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table';\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoTable = () => {\n  _s();\n  // const [isChecked , setIsChecked] = useState(true)\n  let tdata = localStorage.getItem(\"task\");\n  const data = JSON.parse(String(tdata));\n  // console.log(\"Local Storage\",tdata)\n  // console.log(\"Converted Data\",data)\n  const columns = [{\n    header: \"Name\",\n    accessorKey: \"name\",\n    footer: \"Name\"\n  }, {\n    header: \"Task\",\n    accessorKey: \"task\",\n    footer: \"Task\"\n  }, {\n    header: \"Done\",\n    accessorKey: \"isDone\",\n    cell: row => {\n      return console.log(\"ROWSSS\", row.row.original.isDone)\n      // <Checkbox checked={row.row.original.isDone} inputProps={{ 'aria-label': 'controlled' }}/>\n      ;\n    }\n  }, {\n    header: \"Edit\",\n    cell: row => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }, this);\n    }\n  }, {\n    header: \"Delete\",\n    cell: row => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"30px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        size: \"small\",\n        \"aria-label\": \"a dense table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: table.getHeaderGroups().map(headerGroup => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: headerGroup.headers.map(header => {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: flexRender(header.column.columnDef.header, header.getContext())\n                }, header.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 25\n                }, this);\n              })\n            }, headerGroup.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: table.getRowModel().rows.map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: row.getVisibleCells().map(cell => {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: flexRender(cell.column.columnDef.cell, cell.getContext())\n                }, cell.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 23\n                }, this);\n              })\n            }, row.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoTable, \"+qfJc9U8evODZQ8bBg9G2KVouAc=\", false, function () {\n  return [useReactTable];\n});\n_c = TodoTable;\nexport default TodoTable;\nvar _c;\n$RefreshReg$(_c, \"TodoTable\");","map":{"version":3,"names":["Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","React","useReactTable","getCoreRowModel","flexRender","Button","jsxDEV","_jsxDEV","TodoTable","_s","tdata","localStorage","getItem","data","JSON","parse","String","columns","header","accessorKey","footer","cell","row","console","log","original","isDone","variant","children","fileName","_jsxFileName","lineNumber","columnNumber","table","style","padding","component","sx","minWidth","size","getHeaderGroups","map","headerGroup","headers","column","columnDef","getContext","id","getRowModel","rows","getVisibleCells","_c","$RefreshReg$"],"sources":["/home/lenovo/TypeScript+React/tsexample/src/components/TodoTable.tsx"],"sourcesContent":["import { useMemo, useState } from 'react'\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport React from 'react'\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table'\nimport { Button, ButtonGroup, Checkbox } from '@mui/material';\n\nconst TodoTable: React.FC = () => {\n  // const [isChecked , setIsChecked] = useState(true)\n  let tdata = localStorage.getItem(\"task\");\n  const data = JSON.parse(String(tdata));\n  // console.log(\"Local Storage\",tdata)\n  // console.log(\"Converted Data\",data)\n  const columns = [\n    {\n      header: \"Name\",\n      accessorKey: \"name\",\n      footer: \"Name\"\n    },\n    {\n      header: \"Task\",\n      accessorKey: \"task\",\n      footer: \"Task\"\n    },\n    {\n      header: \"Done\",\n      accessorKey: \"isDone\",\n      cell : (row : any)  =>{\n          return(\n            console.log(\"ROWSSS\", row.row.original.isDone)\n            // <Checkbox checked={row.row.original.isDone} inputProps={{ 'aria-label': 'controlled' }}/>\n          )\n      }\n    },\n    {\n      header: \"Edit\",\n      cell : (row : any)  =>{\n        return(\n         <Button variant='outlined' >Edit</Button>\n        )\n    }\n    },\n    {header: \"Delete\",\n      cell : (row : any)  =>{\n        return(\n          <Button variant='outlined'>Delete</Button>\n        )\n    }\n    }\n    \n  ];\n\n  \n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <div style={{ padding: \"30px\" }}>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            {table.getHeaderGroups().map(headerGroup => {\n              return (\n                <TableRow key={headerGroup.id}>\n                  {\n                    headerGroup.headers.map(header => {\n                      return (\n\n                        <TableCell key={header.id}>\n                          {flexRender(header.column.columnDef.header, header.getContext())}\n                        </TableCell>\n\n                      )\n                    })\n                  }\n                  {/* <TableCell>\n                    Edit\n                  </TableCell>\n                  <TableCell>\n                    Delete\n                  </TableCell> */}\n                </TableRow>\n\n              )\n            })}\n\n          </TableHead>\n          <TableBody>\n            {table.getRowModel().rows.map(row => {\n              return (\n                <TableRow key={row.id}>\n                  {row.getVisibleCells().map(cell => {\n                    return (\n                      <TableCell key={cell.id}>\n                        {flexRender(cell.column.columnDef.cell, cell.getContext()\n                        )}\n                      </TableCell>\n\n                    )\n                  })}\n                  {/* <TableCell key={row.id} >\n                    <Button onClick={()=>{\n\n                    }} >Edit</Button>\n                  </TableCell>\n                  <TableCell >\n                    <Button>Delete</Button>\n                  </TableCell> */}\n                </TableRow>\n\n              )\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\nexport default TodoTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}